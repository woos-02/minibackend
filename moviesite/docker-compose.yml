version: '3'
services:
    web:
        # image: server
        build : .
        container_name: web
        command: bash -c "gunicorn moviesite.wsgi:application -b 0.0.0.0:8000" # 서버 실행
        ports:
            - '8000:8000'
        restart: always
        volumes:
            - .:/app
            - ./static:/app/static
            - ./media:/app/media # media가 있으면
        networks:
            - server
        # env_file:
        #     - .env
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

    nginx:
        image: nginx:latest
        container_name: nginx
        volumes:
            - ./nginx.default.conf:/etc/nginx/conf.d/default.conf
            - ./static:/static
            - ./media:/media # media가 있으면
            - ./cert/certbot/conf:/etc/letsencrypt # 이 부분
            - ./cert/certbot/www:/var/www/certbot # 이 부분
            - ./cert/cerbot/conf/optinos-ssl-nginx.conf:/ets/letsencrypt/options-ssl-nginx.conf
            - ./cert/cerbot/conf/ssl-dhparams.pem:/ets/letsencrypt/ssl-dhparams.pem
        restart: always
        ports:
            - "80:80"
            - '443:443'
        depends_on:
            - web
        networks:
            - server

    certbot:
        image: certbot/certbot
        container_name : cerbot
        restart: unless-stopped
        volumes:
            - ./cert/certbot/conf:/etc/letsencrypt
            - ./cert/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
    server:
